@page "/Accounts/ForgotPassword"
@using Shared.Auth.Models

@inject NavigationManager _navManager
@inject AuthenticationStateProvider _authStateProvider
@inject IPasswordManagerService _passwordManager

<div>
   <EditForm Enhance Model="model" OnValidSubmit="OnForgotPasswordAsync">
        <div class="form-group mb-1">
            <label class="form-label">Email</label>
            <input class="form-control" @bind="model.Email" />
        </div>
        <div class="mb-1">
            <button class="btn btn-primary">Forgot Password</button>
        </div>
   </EditForm>

    @if(Errors.Any()) {
        <table class="table table-bordered table-striped mt-3 mb-1">
           <thead>
               <tr>
                   <th>Code</th>
                   <th>Message</th>
               </tr>
           </thead>
           <tbody>
                @foreach(var item in Errors) {
                    <tr>
                        <td>@item.Code</td>
                        <td>@item.Message</td>
                    </tr>
                }
           </tbody>
        </table>
    }

</div>

@code {
    private ForgotPasswordDto model = new();
    private List<CodeMessage> Errors = [];

    private async Task OnForgotPasswordAsync() {
        Errors.Clear();
        var result = await _passwordManager.ForgotAsync(model.Email);
        if(result.Status == ResultStatus.Failed) {
            Errors.AddRange(result.Messages);
        }
        else {
            _navManager.NavigateTo("/Accounts/ResetPassword");
        }        
    }
}


